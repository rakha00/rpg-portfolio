---
import "../styles/global.css";
import { ClientRouter } from "astro:transitions";
import MuteButton from "../components/MuteButton.astro";

export interface Props {
  title: string;
}
const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Rakhadi's Web Developer Portfolio" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap"
      rel="stylesheet"
    />

    <ClientRouter />
  </head>
  <body class="min-h-screen bg-gray-900">
    <header
      id="main-header"
      class="bg-gray-900 border-b-2 border-gray-700 relative z-50"
    >
      <nav
        class="container mx-auto flex flex-col md:flex-row justify-center items-center p-4"
      >
        <a
          href="/"
          data-sound-link="true"
          class="text-gray-300 hover:text-yellow-300 px-3 py-2 rounded-md text-base"
          >World Map</a
        >
        <a
          href="/about"
          data-sound-link="true"
          class="text-gray-300 hover:text-yellow-300 px-3 py-2 rounded-md text-base"
          >About</a
        >
        <a
          href="/skills"
          data-sound-link="true"
          class="text-gray-300 hover:text-yellow-300 px-3 py-2 rounded-md text-base"
          >Skills</a
        >
        <a
          href="/projects"
          data-sound-link="true"
          class="text-gray-300 hover:text-yellow-300 px-3 py-2 rounded-md text-base"
          >Projects</a
        >
        <a
          href="/contact"
          data-sound-link="true"
          class="text-gray-300 hover:text-yellow-300 px-3 py-2 rounded-md text-base"
          >Contact</a
        >
      </nav>
    </header>

    <main class="relative z-10">
      <slot />
    </main>

    <audio id="bgm" src="/sounds/bgm.mp3" loop transition:persist></audio>
    <MuteButton transition:persist />

    <script>
      // This single, global script controls everything.
      const hoverSound = new Audio("/sounds/hover.mp3");
      const clickSound = new Audio("/sounds/click.mp3");
      hoverSound.volume = 0.3;
      clickSound.volume = 0.5;

      function playSound(sound: HTMLAudioElement) {
        if (localStorage.getItem("isMuted") === "true") return;
        sound.currentTime = 0;
        sound.play().catch((e: any) => {});
      }

      function handleSoundEvents(event: MouseEvent) {
        const target = event.target as Element;
        const link = target.closest('a[data-sound-link="true"]');

        if (!link) return;

        if (event.type === "mouseenter") {
          playSound(hoverSound);
        } else if (event.type === "click") {
          event.preventDefault();
          const destination = link.getAttribute("href");
          playSound(clickSound);
          if (destination) {
            setTimeout(() => {
              window.location.href = destination;
            }, 200);
          }
        }
      }

      function handleBGM() {
        const bgm = document.getElementById("bgm") as HTMLAudioElement;
        if (bgm && bgm.paused) {
          bgm.play().catch((e) => {});
        }
        document.body.removeEventListener("click", handleBGM);
      }

      function handleMuteButton() {
        const button = document.getElementById("mute-button");
        const icon = document.getElementById("mute-icon") as HTMLImageElement;
        const bgm = document.getElementById("bgm") as HTMLAudioElement;
        if (!button || !icon || !bgm) return;

        let isMuted = localStorage.getItem("isMuted") === "true";

        const updateMuteState = () => {
          icon.src = isMuted
            ? "/icons/speaker-off.svg"
            : "/icons/speaker-on.svg";
          bgm.muted = isMuted;
          localStorage.setItem("isMuted", String(isMuted));
        };

        button.onclick = () => {
          isMuted = !isMuted;
          updateMuteState();
        };

        updateMuteState();
      }

      function handleHeaderVisibility() {
        const header = document.getElementById("main-header");
        if (!header) return;
        header.style.display =
          window.location.pathname === "/" ? "none" : "block";
      }

      function runGlobalScripts() {
        handleHeaderVisibility();
        handleMuteButton();
      }

      // Setup that runs only once per full page load
      if (!(window as any).audioInitialized) {
        document.addEventListener("click", handleSoundEvents);
        document.addEventListener("mouseenter", handleSoundEvents, true);
        document.body.addEventListener("click", handleBGM, { once: true });
        (window as any).audioInitialized = true;
      }

      // Run these on every page transition
      document.addEventListener("astro:page-load", runGlobalScripts);
      runGlobalScripts();
    </script>
  </body>
</html>
